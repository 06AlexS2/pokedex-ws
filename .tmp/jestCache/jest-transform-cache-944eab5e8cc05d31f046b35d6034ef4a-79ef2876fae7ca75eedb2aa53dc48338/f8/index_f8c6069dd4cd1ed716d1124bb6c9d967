0e61b032c61cc80b25bebf2f6435e5a8
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.app = void 0;
// src/index.js
const express_1 = __importDefault(require("express"));
const dotenv_1 = __importDefault(require("dotenv"));
const DBRepository_1 = __importDefault(require("./context/pokemon/infrastructure/persistence/SQLite/DBRepository"));
const PokemonService_1 = __importDefault(require("./context/pokemon/application/PokemonService"));
const PokemonController_1 = __importDefault(require("./context/pokemon/infrastructure/express/PokemonController"));
dotenv_1.default.config();
exports.app = (0, express_1.default)();
exports.app.use(express_1.default.json());
const port = process.env.PORT || 3001;
let pokemonController;
if (process.env.NODE_ENV === "development") {
    const SQLitePokemonRepository = new DBRepository_1.default();
    const pokemonService = new PokemonService_1.default(SQLitePokemonRepository);
    pokemonController = new PokemonController_1.default(pokemonService);
    exports.app.post("/api/v1/catch/pokemon-name/:pokemon", pokemonController.savePokemonIntoDB.bind(pokemonController));
    exports.app.delete("/api/set-free/pokemon-id/:id", pokemonController.releasePokemonById.bind(pokemonController));
    exports.app.delete("/api/set-free/pokemon-name/:pokemon", pokemonController.releasePokemonByName.bind(pokemonController));
    exports.app.delete("/api/set-free/pokemon-type/:type", pokemonController.releaseManyPokemonByType.bind(pokemonController));
    exports.app.get("/api/v1/pokedex", pokemonController.obtainPokedex.bind(pokemonController));
}
exports.app.listen(port, () => {
    console.log(`[server]: Server is running at http://localhost:${port}`);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2FsZXhzMi9kZXZlbG9wL3Bva2VhcGktd3Mvc3JjL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGVBQWU7QUFDZixzREFBOEQ7QUFDOUQsb0RBQTRCO0FBQzVCLG9IQUFnRztBQUNoRyxrR0FBMEU7QUFDMUUsbUhBQTJGO0FBRTNGLGdCQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFFSCxRQUFBLEdBQUcsR0FBWSxJQUFBLGlCQUFPLEdBQUUsQ0FBQztBQUN0QyxXQUFHLENBQUMsR0FBRyxDQUFDLGlCQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUV4QixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUM7QUFFdEMsSUFBSSxpQkFBb0MsQ0FBQztBQUV6QyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLGFBQWEsRUFBRSxDQUFDO0lBQzNDLE1BQU0sdUJBQXVCLEdBQUcsSUFBSSxzQkFBZ0IsRUFBRSxDQUFDO0lBQ3ZELE1BQU0sY0FBYyxHQUFHLElBQUksd0JBQWMsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQ25FLGlCQUFpQixHQUFHLElBQUksMkJBQWlCLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDMUQsV0FBRyxDQUFDLElBQUksQ0FDTixxQ0FBcUMsRUFDckMsaUJBQWlCLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQzVELENBQUM7SUFDRixXQUFHLENBQUMsTUFBTSxDQUNSLDhCQUE4QixFQUM5QixpQkFBaUIsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FDN0QsQ0FBQztJQUNGLFdBQUcsQ0FBQyxNQUFNLENBQ1IscUNBQXFDLEVBQ3JDLGlCQUFpQixDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUMvRCxDQUFDO0lBQ0YsV0FBRyxDQUFDLE1BQU0sQ0FDUixrQ0FBa0MsRUFDbEMsaUJBQWlCLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQ25FLENBQUM7SUFDRixXQUFHLENBQUMsR0FBRyxDQUNMLGlCQUFpQixFQUNqQixpQkFBaUIsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQ3hELENBQUM7QUFDSixDQUFDO0FBRUQsV0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFO0lBQ3BCLE9BQU8sQ0FBQyxHQUFHLENBQUMsbURBQW1ELElBQUksRUFBRSxDQUFDLENBQUM7QUFDekUsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2FsZXhzMi9kZXZlbG9wL3Bva2VhcGktd3Mvc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pbmRleC5qc1xuaW1wb3J0IGV4cHJlc3MsIHsgRXhwcmVzcywgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5pbXBvcnQgU1FMaXRlUmVwb3NpdG9yeSBmcm9tIFwiLi9jb250ZXh0L3Bva2Vtb24vaW5mcmFzdHJ1Y3R1cmUvcGVyc2lzdGVuY2UvU1FMaXRlL0RCUmVwb3NpdG9yeVwiO1xuaW1wb3J0IFBva2Vtb25TZXJ2aWNlIGZyb20gXCIuL2NvbnRleHQvcG9rZW1vbi9hcHBsaWNhdGlvbi9Qb2tlbW9uU2VydmljZVwiO1xuaW1wb3J0IFBva2Vtb25Db250cm9sbGVyIGZyb20gXCIuL2NvbnRleHQvcG9rZW1vbi9pbmZyYXN0cnVjdHVyZS9leHByZXNzL1Bva2Vtb25Db250cm9sbGVyXCI7XG5cbmRvdGVudi5jb25maWcoKTtcblxuZXhwb3J0IGNvbnN0IGFwcDogRXhwcmVzcyA9IGV4cHJlc3MoKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAxO1xuXG5sZXQgcG9rZW1vbkNvbnRyb2xsZXI6IFBva2Vtb25Db250cm9sbGVyO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIikge1xuICBjb25zdCBTUUxpdGVQb2tlbW9uUmVwb3NpdG9yeSA9IG5ldyBTUUxpdGVSZXBvc2l0b3J5KCk7XG4gIGNvbnN0IHBva2Vtb25TZXJ2aWNlID0gbmV3IFBva2Vtb25TZXJ2aWNlKFNRTGl0ZVBva2Vtb25SZXBvc2l0b3J5KTtcbiAgcG9rZW1vbkNvbnRyb2xsZXIgPSBuZXcgUG9rZW1vbkNvbnRyb2xsZXIocG9rZW1vblNlcnZpY2UpO1xuICBhcHAucG9zdChcbiAgICBcIi9hcGkvdjEvY2F0Y2gvcG9rZW1vbi1uYW1lLzpwb2tlbW9uXCIsXG4gICAgcG9rZW1vbkNvbnRyb2xsZXIuc2F2ZVBva2Vtb25JbnRvREIuYmluZChwb2tlbW9uQ29udHJvbGxlcilcbiAgKTtcbiAgYXBwLmRlbGV0ZShcbiAgICBcIi9hcGkvc2V0LWZyZWUvcG9rZW1vbi1pZC86aWRcIixcbiAgICBwb2tlbW9uQ29udHJvbGxlci5yZWxlYXNlUG9rZW1vbkJ5SWQuYmluZChwb2tlbW9uQ29udHJvbGxlcilcbiAgKTtcbiAgYXBwLmRlbGV0ZShcbiAgICBcIi9hcGkvc2V0LWZyZWUvcG9rZW1vbi1uYW1lLzpwb2tlbW9uXCIsXG4gICAgcG9rZW1vbkNvbnRyb2xsZXIucmVsZWFzZVBva2Vtb25CeU5hbWUuYmluZChwb2tlbW9uQ29udHJvbGxlcilcbiAgKTtcbiAgYXBwLmRlbGV0ZShcbiAgICBcIi9hcGkvc2V0LWZyZWUvcG9rZW1vbi10eXBlLzp0eXBlXCIsXG4gICAgcG9rZW1vbkNvbnRyb2xsZXIucmVsZWFzZU1hbnlQb2tlbW9uQnlUeXBlLmJpbmQocG9rZW1vbkNvbnRyb2xsZXIpXG4gICk7XG4gIGFwcC5nZXQoXG4gICAgXCIvYXBpL3YxL3Bva2VkZXhcIixcbiAgICBwb2tlbW9uQ29udHJvbGxlci5vYnRhaW5Qb2tlZGV4LmJpbmQocG9rZW1vbkNvbnRyb2xsZXIpXG4gICk7XG59XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhgW3NlcnZlcl06IFNlcnZlciBpcyBydW5uaW5nIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fWApO1xufSk7XG4iXSwidmVyc2lvbiI6M30=