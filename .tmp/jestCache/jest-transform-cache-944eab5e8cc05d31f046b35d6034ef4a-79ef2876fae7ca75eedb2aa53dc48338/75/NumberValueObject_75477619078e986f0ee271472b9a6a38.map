{"file":"/Users/alexs2/develop/pokeapi-ws/src/context/shared/domain/value_objects/NumberValueObject.ts","mappings":";;;;;AACA,gEAAwC;AAExC,MAAqB,iBAAkB,SAAQ,qBAAmB;IAC9D,YAAY,KAAa;QACrB,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEO,mBAAmB,CAAC,KAAa;QACrC,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACtC,CAAC;IACL,CAAC;CACJ;AAfD,oCAeC","names":[],"sources":["/Users/alexs2/develop/pokeapi-ws/src/context/shared/domain/value_objects/NumberValueObject.ts"],"sourcesContent":["import { isNumber } from \"util\";\nimport ValueObject from \"./ValueObject\";\n\nexport default class NumberValueObject extends ValueObject<number> {\n    constructor(value: number) {\n        super(value || 0);\n        this.ensureIsValidNumber(this.value);\n    }\n\n    public getValue(): number {\n        return this.value;\n    }\n    \n    private ensureIsValidNumber(value: number): void {\n        if (typeof value !== \"number\" || isNaN(value) || !isFinite(value)) {\n            throw new Error('Invalid number');\n        }\n    }\n}"],"version":3}