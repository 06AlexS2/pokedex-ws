{"file":"/Users/alexs2/develop/pokeapi-ws/src/context/pokemon/infrastructure/express/PokemonController.ts","mappings":"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","names":[],"sources":["/Users/alexs2/develop/pokeapi-ws/src/context/pokemon/infrastructure/express/PokemonController.ts"],"sourcesContent":["import { Request, Response } from \"express\";\nimport PokemonService from \"../../application/PokemonService\";\nimport Pokemon from \"../../domain/Pokemon\";\n\nexport default class PokemonController {\n  constructor(private pokemonService: PokemonService) {}\n\n  async savePokemonIntoDB(req: Request, res: Response) {\n    const { pokemon } = req.params;\n    try {\n      const fetchedPokemon: Pokemon =\n        await this.pokemonService.fetchPokemonFromAPI(pokemon);\n      res.status(201).json(fetchedPokemon.toPrimitive());\n    } catch (error: any) {\n      res.status(400).json({ message: error.message });\n    }\n  }\n\n  async releasePokemonById(req: Request, res: Response) {\n    const { id } = req.params;\n    const parsedId: number = parseInt(id, 10);\n    try {\n      await this.pokemonService.setFreeAPokemonById(parsedId);\n      res.status(204).send({ message: \"pokemon deleted successfully.\" });\n    } catch (error: any) {\n      res.status(404).json({ message: error.message });\n    }\n  }\n\n  async releasePokemonByName(req: Request, res: Response) {\n    const { pokemon } = req.params;\n    try {\n      await this.pokemonService.setFreeAPokemonByName(pokemon);\n      res.status(204).send({ message: \"pokemon deleted successfully.\" });\n    } catch (error: any) {\n      res.status(404).json({ message: error.message });\n    }\n  }\n\n  async obtainPokedex(req: Request, res: Response) {\n    try {\n      const fetchedPokemon: Pokemon[] = await this.pokemonService.showPokedex();\n      const pokedex: any[] = [];\n      for (const pokemon of fetchedPokemon) {\n        pokedex.push(pokemon.toPrimitive());\n      }\n      res.status(200).json(pokedex);\n    } catch (error: any) {\n      res.status(500).json({ message: error.message });\n    }\n  }\n\n  async releaseManyPokemonByType(req: Request, res: Response) {\n    const { type } = req.params;\n    try {\n      await this.pokemonService.setFreeManyPokemonByType(type);\n      res.status(204).send({ message: \"pokemon deleted successfully.\" });\n    } catch (error: any) {\n      res.status(400).json({ message: error.message });\n    }\n  }\n}\n"],"version":3}